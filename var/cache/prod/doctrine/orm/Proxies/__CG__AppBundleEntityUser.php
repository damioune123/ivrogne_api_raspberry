<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \AppBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'firstname', 'lastname', 'username', 'password', 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'role', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'userAccounts', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'rfidCard', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'authTokens', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'nefews', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'godfather', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'promotion', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'moneyLimit'];
        }

        return ['__isInitialized__', 'id', 'firstname', 'lastname', 'username', 'password', 'plainPassword', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'role', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'userAccounts', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'rfidCard', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'authTokens', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'nefews', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'godfather', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'promotion', '' . "\0" . 'AppBundle\\Entity\\User' . "\0" . 'moneyLimit'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname($firstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', [$firstname]);

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', []);

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastname($lastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastname', [$lastname]);

        return parent::setLastname($lastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastname', []);

        return parent::getLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($plainPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$plainPassword]);

        return parent::setPlainPassword($plainPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$role]);

        return parent::setRoles($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserAccounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserAccounts', []);

        return parent::getUserAccounts();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserAccounts($userAccounts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserAccounts', [$userAccounts]);

        return parent::setUserAccounts($userAccounts);
    }

    /**
     * {@inheritDoc}
     */
    public function getRfidCard()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRfidCard', []);

        return parent::getRfidCard();
    }

    /**
     * {@inheritDoc}
     */
    public function setRfidCard($rfidCard)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRfidCard', [$rfidCard]);

        return parent::setRfidCard($rfidCard);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthTokens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthTokens', []);

        return parent::getAuthTokens();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthTokens($authTokens)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthTokens', [$authTokens]);

        return parent::setAuthTokens($authTokens);
    }

    /**
     * {@inheritDoc}
     */
    public function getNefews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNefews', []);

        return parent::getNefews();
    }

    /**
     * {@inheritDoc}
     */
    public function setNefews($nefews)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNefews', [$nefews]);

        return parent::setNefews($nefews);
    }

    /**
     * {@inheritDoc}
     */
    public function getGodfather()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGodfather', []);

        return parent::getGodfather();
    }

    /**
     * {@inheritDoc}
     */
    public function setGodfather($godfather)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGodfather', [$godfather]);

        return parent::setGodfather($godfather);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromotion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromotion', []);

        return parent::getPromotion();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromotion($promotion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromotion', [$promotion]);

        return parent::setPromotion($promotion);
    }

    /**
     * {@inheritDoc}
     */
    public function getMoneyLimit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMoneyLimit', []);

        return parent::getMoneyLimit();
    }

    /**
     * {@inheritDoc}
     */
    public function setMoneyLimit($moneyLimit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMoneyLimit', [$moneyLimit]);

        return parent::setMoneyLimit($moneyLimit);
    }

}
